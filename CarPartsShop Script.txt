IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'CZESC'))
	BEGIN
		PRINT 'Tabela CZESC istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele CZESC'
		CREATE TABLE CZESC
		(
		IDCZESCI int primary key identity(1,1) not null,
		NAZWA char(30) not null CHECK ((datalength([NAZWA])>(3))),
		OPIS char(200) DEFAULT('Brak opisu'),
		CENA decimal(10,2) not null
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'KLIENT'))
	BEGIN
		PRINT 'Tabela KLIENT istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele KLIENT'
		CREATE TABLE KLIENT
		(
		IDKLIENTA int primary key identity(1,1) not null,
		NAZWA char(30) not null,
		PESEL char(11) null,
		NIP char(10) null,
		CONSTRAINT PESELNIPCONSTRAINT
		CHECK (
			( 
				KLIENT.PESEL IS NOT NULL 
				AND datalength([NAZWA])>(3)
				AND datalength([PESEL])=(11) 
				AND KLIENT.NIP IS NULL 
			)
			OR
			( 
				KLIENT.NIP IS NOT NULL
				AND datalength([NAZWA])>(3)
				AND datalength([NIP])=(10) 
				AND KLIENT.PESEL IS NULL 
			) 
			)
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'HURTOWNIA'))
	BEGIN
		PRINT 'Tabela HURTOWNIA istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele HURTOWNIA'
		CREATE TABLE HURTOWNIA
		(
		IDHURTOWNI int primary key identity(1,1) not null,
		NAZWA char(30) not null CHECK ((datalength([NAZWA])>(3)))
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'SKLEP'))
	BEGIN
		PRINT 'Tabela SKLEP istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele SKLEP'
		CREATE TABLE SKLEP
		(
		IDSKLEPU int primary key identity(1,1) not null,
		NAZWA char(30) not null CHECK ((datalength([NAZWA])>(3))),
		OPIS char(200) DEFAULT('Brak opisu')
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'ZAMOW'))
	BEGIN
		PRINT 'Tabela ZAMOW istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele ZAMOW'
		CREATE TABLE ZAMOW
		(
		IDZAMOW int primary key identity(1,1) not null,
		IDKLIENTA int not null REFERENCES KLIENT(IDKLIENTA),
		DATA DATE not null DEFAULT(GETDATE()),
		STATUS char(1) CHECK(STATUS = 'P' OR STATUS = 'W' OR STATUS = 'Z' OR STATUS = 'A' )DEFAULT('P'))
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'MAGAZYN'))
	BEGIN
		PRINT 'Tabela MAGAZYN istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele MAGAZYN'
		CREATE TABLE MAGAZYN
		(
		IDMAGAZYNU int primary key identity(1,1) not null,
		NAZWA char(30) not null CHECK (datalength([NAZWA])>(3)),
		IDSKLEPU int not null REFERENCES SKLEP(IDSKLEPU)
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'DOSTAWA'))
	BEGIN
		PRINT 'Tabela DOSTAWA istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele DOSTAWA'
		CREATE TABLE DOSTAWA
		(
		IDDOSTAWY int primary key identity(1,1) not null,
		IDHURTOWNI int not null REFERENCES HURTOWNIA(IDHURTOWNI),
		DATA DATE not null DEFAULT(GETDATE())
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'DOSTACZESCI'))
	BEGIN
		PRINT 'Tabela DOSTACZESCI istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele DOSTACZESCI'
		CREATE TABLE DOSTACZESCI
		(
		IDDOSTAWY int not null REFERENCES DOSTAWA(IDDOSTAWY),
		IDCZESCI int not null REFERENCES CZESC(IDCZESCI),
		ILOSC float not null
		)
	END
GO 

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'MAGACZESCI'))
	BEGIN
		PRINT 'Tabela MAGACZESCI istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele MAGACZESCI'
		CREATE TABLE MAGACZESCI
		(
		IDMAGAZYNU int not null REFERENCES MAGAZYN(IDMAGAZYNU),
		IDCZESCI int not null REFERENCES CZESC(IDCZESCI),
		ILOSC float not null
		)
	END
GO

IF EXISTS(Select * from dbo.sysobjects where id = object_id(N'ZAMOCZESCI'))
	BEGIN
		PRINT 'Tabela ZAMOCZESCI istnieje w Termin0'
	END
ELSE
	BEGIN
		PRINT 'Tworze tabele ZAMOCZESCI'
		CREATE TABLE ZAMOCZESCI
		(
		IDZAMOW int not null REFERENCES ZAMOW(IDZAMOW),
		IDCZESCI int not null REFERENCES CZESC(IDCZESCI),
		ILOSC float not null
		)
	END
GO

CREATE VIEW WIDOKZAMOWIENIA
AS
SELECT ZAMOW.IDZAMOW, KLIENT.NAZWA, ZAMOCZESCI.IDCZESCI, ZAMOCZESCI.ILOSC, ZAMOW.STATUS, ZAMOW.DATA
FROM ZAMOW JOIN KLIENT ON ZAMOW.IDKLIENTA = KLIENT.IDKLIENTA JOIN ZAMOCZESCI ON ZAMOW.IDZAMOW = ZAMOCZESCI.IDZAMOW
GO

CREATE VIEW SKLADMAGAZYNU
AS
SELECT MAGAZYN.NAZWA, ILOSC*CENA AS SUMA
FROM MAGAZYN JOIN MAGACZESCI ON MAGAZYN.IDMAGAZYNU = MAGACZESCI.IDMAGAZYNU JOIN CZESC ON MAGACZESCI.IDCZESCI = CZESC.IDCZESCI
GROUP BY MAGAZYN.NAZWA, MAGACZESCI.ILOSC, CZESC.CENA
GO

CREATE TABLE LOGMAGAZYNU
(
IDTRIGGER int IDENTITY(1,1),
OPERACJA char(10),
IDCZESCI int,
STARA_WART int,
NOWA_WART int,
CZAS DATETIME DEFAULT(GETDATE())
)
GO

CREATE TRIGGER AFTERINSERTMAGACZESCI
ON MAGACZESCI
AFTER INSERT
AS
IF UPDATE(ILOSC)
DECLARE @Nowaczesc float
SELECT @Nowaczesc = ILOSC
FROM inserted
DECLARE @NowaczescID int
SELECT @NowaczescID = IDCZESCI
from inserted
INSERT INTO LOGMAGAZYNU(OPERACJA, IDCZESCI, STARA_WART, NOWA_WART,CZAS)
VALUES ('INSERT', @NowaczescID, null, @Nowaczesc, DEFAULT)
GO

CREATE TRIGGER AFTERUPDATEMAGACZESCI
ON MAGACZESCI
AFTER UPDATE
AS
IF UPDATE(ILOSC)
DECLARE @Nowaczesc float 
DECLARE @NowaczescID int
SELECT @Nowaczesc = ILOSC
FROM inserted
SELECT @NowaczescID = IDCZESCI
from inserted
DECLARE @Staraczesc float
SELECT @Staraczesc = ILOSC
from deleted
INSERT INTO LOGMAGAZYNU(OPERACJA, IDCZESCI, STARA_WART, NOWA_WART,CZAS)
VALUES ('UPDATE', @NowaczescID, @Staraczesc, @Nowaczesc, DEFAULT)



DROP TABLE ZAMOCZESCI
DROP TABLE MAGACZESCI
DROP TABLE DOSTACZESCI
DROP TABLE DOSTAWA
DROP TABLE MAGAZYN
DROP TABLE ZAMOW
DROP TABLE SKLEP
DROP TABLE HURTOWNIA
DROP TABLE KLIENT
DROP TABLE CZESC

GO

CREATE TRIGGER AFTERDELETEMAGACZESCI
ON MAGACZESCI
AFTER DELETE
AS
IF UPDATE(ILOSC)
DECLARE @Nowaczesc float 
DECLARE @NowaczescID int
SELECT @Nowaczesc = ILOSC
FROM deleted
SELECT @NowaczescID = IDCZESCI
from deleted
INSERT INTO LOGMAGAZYNU(OPERACJA, IDCZESCI, STARA_WART, NOWA_WART,CZAS)
VALUES ('DELETE', @NowaczescID, @Nowaczesc,null, DEFAULT)
GO


CREATE TRIGGER STATUSCHANGE ON ZAMOW FOR UPDATE
as
begin
update MAGACZESCI
set ILOSC = MAGACZESCI.ILOSC - UPDATECZESCI.SUMILOSC
FROM
(
	SELECT ZAMOCZESCI.IDCZESCI, SUM(ZAMOCZESCI.ILOSC) as SUMILOSC
	FROM DELETED JOIN INSERTED ON DELETED.IDZAMOW = INSERTED.IDZAMOW 
	JOIN ZAMOCZESCI ON DELETED.IDZAMOW = ZAMOCZESCI.IDZAMOW
	WHERE DELETED.STATUS = 'P'
	AND INSERTED.STATUS in ('W','Z')
	GROUP BY ZAMOCZESCI.IDCZESCI
	HAVING sum(ZAMOCZESCI.ILOSC) <> 0
) as UPDATECZESCI
JOIN MAGACZESCI ON UPDATECZESCI.IDCZESCI = MAGACZESCI.IDCZESCI
end
go

CREATE FUNCTION SHOWFULLCLIENTDATA(@Idk int) 
RETURNS char(91)
AS
BEGIN
DECLARE @Fullclientdata nvarchar(200)
SELECT @Fullclientdata = KLIENT.NAZWA + ISNULL(KLIENT.PESEL,'') + ISNULL(KLIENT.NIP,'')
From KLIENT
WHERE Klient.IDKLIENTA = @Idk
RETURN @Fullclientdata
END
GO

CREATE FUNCTION WHATIGOTWITHDELIVERY(@id int)
RETURNS TABLE
AS
	RETURN(SELECT DOSTACZESCI.IDDOSTAWY, DOSTACZESCI.IDCZESCI, DOSTACZESCI.ILOSC, DOSTAWA.DATA
		   FROM DOSTACZESCI JOIN DOSTAWA ON
		   DOSTACZESCI.IDDOSTAWY = DOSTAWA.IDDOSTAWY
		   WHERE DOSTACZESCI.IDCZESCI = @id)

GO

CREATE PROCEDURE SAVENEWPART
	(@Nazwa char(30),
	@Opis char(200),
	@Cena decimal(10,2),
	@komunikat varchar(200) output)
AS
IF EXISTS (SELECT * FROM CZESC WHERE @Nazwa = NAZWA AND @Opis = OPIS AND @Cena = CENA)
set @komunikat = 'Blad dodawania nowej czesci, czesc juz istnieje'
IF NOT EXISTS (SELECT * FROM CZESC WHERE @Nazwa = NAZWA AND @Opis = OPIS AND @Cena = CENA)
BEGIN TRY
	INSERT INTO CZESC(NAZWA,OPIS,CENA)
	VALUES(@Nazwa,@Opis,@Cena)
	set @komunikat = 'Dodaje nowa czesc - pomyslnie dodana'
END TRY

BEGIN CATCH
set @komunikat = 'Blad dodawania nowej czesci - BRAK ZAPISU'
SELECT	ErrorNumber = ERROR_NUMBER(),
		ErrorSeverity = ERROR_SEVERITY(),
		ErrorState = ERROR_STATE(),
		ErrorProcedure = ERROR_PROCEDURE(),
		ErrorLine = ERROR_LINE(),
		ErrorMessage = ERROR_MESSAGE();
END CATCH
GO

DECLARE SHOWCZESCIINFO CURSOR
LOCAL
FOR SELECT NAZWA, CENA FROM CZESC ORDER BY CENA ASC
DECLARE @Nazwa char(30)
DECLARE @Cena char(5)
OPEN SHOWCZESCIINFO
FETCH SHOWCZESCIINFO INTO @Nazwa, @Cena
WHILE @@FETCH_STATUS =0
	BEGIN
		PRINT @Nazwa + ' Kosztuje ' +@Cena + ' ZL'
		FETCH SHOWCZESCIINFO INTO @Nazwa, @Cena
	END
CLOSE SHOWCZESCIINFO
DEALLOCATE SHOWCZESCIINFO


INSERT INTO CZESC(NAZWA, OPIS,CENA)
VALUES
('silnik', DEFAULT, 10),
('skrzynia biegow','manulna skrzynia biegow', '15.00'),
('sprzeglo','sprzeglo do 300Nm', 20.00),
('dyferencjal','dyferencjal mala glowa',5.15)
GO

INSERT INTO KLIENT(NAZWA, PESEL, NIP)
VALUES
('Jan Kowalski',99101205395,null),
('Adrian Nowak', 12345678901,null),
('ABC Sp.zoo',null,1234567801),
('DEF S.A.', null,1987654321)
GO
INSERT INTO HURTOWNIA(NAZWA)
VALUES
('Pana Jacka'),
('InterCars'),
('iParts'),
('Allgero')
GO
INSERT INTO SKLEP(NAZWA,OPIS)
VALUES
('Moj Sklep','Moj maly skromny sklepik')
GO
INSERT INTO ZAMOW(IDKLIENTA, DATA, STATUS) VALUES
(1,DEFAULT,'P'),
(1,DEFAULT,'P'),
(2,DEFAULT,'P'),
(2,DEFAULT,'P'),
(3,DEFAULT,'P'),
(3,DEFAULT,'P'),
(4,DEFAULT,'P'),
(4,DEFAULT,'P')
GO
INSERT INTO MAGAZYN(NAZWA, IDSKLEPU) VALUES
('Czesci silnika',1),
('Czesci skrzyni biegow',1),
('Czesci napedu',1)
GO
INSERT INTO DOSTAWA(IDHURTOWNI, DATA) VALUES
(1,DEFAULT),
(2,DEFAULT),
(3,DEFAULT),
(4,DEFAULT)
GO
INSERT INTO DOSTACZESCI(IDDOSTAWY, IDCZESCI, ILOSC) VALUES
(1,1,5),
(2,2,5),
(3,3,5),
(4,4,5)
GO
INSERT INTO MAGACZESCI(IDMAGAZYNU,IDCZESCI,ILOSC) VALUES
(1,1,5),
(2,2,5),
(3,3,5),
(3,4,5)
GO
INSERT INTO ZAMOCZESCI(IDZAMOW,IDCZESCI, ILOSC) VALUES
(1,1,1),
(2,2,1),
(3,3,1),
(4,4,1),
(5,1,1),
(6,2,1),
(7,3,1),
(8,4,1)
GO

CREATE LOGIN Pracownik with password= 'Pracownik'
CREATE User Pracownik for login Pracownik
CREATE Role PracownikRole
GRANT SELECT ON SKLEP TO PracownikRole
GRANT SELECT ON MAGAZYN TO PracownikRole
GRANT SELECT ON MAGACZESCI TO PracownikRole
GRANT SELECT ON CZESC TO PracownikRole
GRANT SELECT, INSERT,UPDATE,DELETE ON KLIENT TO PracownikRole
GRANT SELECT, INSERT,UPDATE,DELETE ON ZAMOW TO PracownikRole
GRANT SELECT, INSERT,UPDATE,DELETE ON ZAMOCZESCI TO PracownikRole
exec sp_addrolemember 'PracownikRole', 'Pracownik'
GO

CREATE LOGIN Magazynier with password= 'Magazynier'
CREATE User Magazynier for login Magazynier
CREATE Role MagazynierRole
GRANT SELECT ON SKLEP TO MagazynierRole
GRANT SELECT ON DOSTAWA TO MagazynierRole
GRANT SELECT ON DOSTACZESCI TO MagazynierRole
GRANT SELECT ON CZESC TO MagazynierRole
GRANT SELECT ON HURTOWNIA TO MagazynierRole
GRANT SELECT, INSERT,UPDATE,DELETE ON MAGAZYN TO MagazynierRole
GRANT SELECT, INSERT,UPDATE,DELETE ON MAGACZESCI TO MagazynierRole
exec sp_addrolemember 'MagazynierRole', 'Magazynier'
GO

CREATE LOGIN Dostawca with password= 'Dostawca'
CREATE User Dostawca for login Dostawca
CREATE Role DostawcaRole
GRANT SELECT ON HURTOWNIA TO DostawcaRole
GRANT SELECT ON DOSTAWA TO DostawcaRole
GRANT SELECT ON DOSTACZESCI TO DostawcaRole
exec sp_addrolemember 'DostawcaRole', 'Dostawca'
GO

CREATE LOGIN Klient with password= 'Klient'
CREATE User Klient for login Klient
CREATE Role KlientRole
GRANT SELECT ON KLIENT TO KlientRole
GRANT SELECT ON ZAMOW TO KlientRole
GRANT SELECT ON ZAMOCZESCI TO KlientRole
exec sp_addrolemember 'KlientRole', 'Klient'
GO


DROP PROCEDURE SAVENEWPART
GO

DROP TRIGGER AFTERINSERTMAGACZESCI
GO
DROP TRIGGER AFTERUPDATEMAGACZESCI
GO
DROP TRIGGER AFTERDELETEMAGACZESCI
GO
DROP TRIGGER STATUSCHANGE
GO

DROP TABLE LOGMAGAZYNU
GO
DROP FUNCTION WHATIGOTWITHDELIVERY
GO
DROP FUNCTION SHOWFULLCLIENTDATA
GO


DROP VIEW SKLADMAGAZYNU
GO
DROP VIEW WIDOKZAMOWIENIA
GO

DELETE FROM ZAMOCZESCI
GO
DELETE FROM MAGACZESCI
GO
DELETE FROM DOSTACZESCI
GO
DELETE FROM DOSTAWA
GO
DELETE FROM MAGAZYN
GO
DELETE FROM ZAMOW
GO
DELETE FROM SKLEP
GO
DELETE FROM HURTOWNIA
GO
DELETE FROM KLIENT
GO
DELETE FROM CZESC
GO

DROP TABLE ZAMOCZESCI
GO
DROP TABLE MAGACZESCI
GO
DROP TABLE DOSTACZESCI
GO
DROP TABLE DOSTAWA
GO
DROP TABLE MAGAZYN
GO
DROP TABLE ZAMOW
GO
DROP TABLE SKLEP
GO
DROP TABLE HURTOWNIA
GO
DROP TABLE KLIENT
GO
DROP TABLE CZESC
GO

SP_DROPROLEMEMBER 'KlientRole', 'Klient'
DROP ROLE KlientRole
DROP User Klient
DROP LOGIN Klient
GO
SP_DROPROLEMEMBER 'DostawcaRole', 'Dostawca'
DROP ROLE DostawcaRole
DROP User Dostawca
DROP LOGIN Dostawca
GO
SP_DROPROLEMEMBER 'MagazynierRole', 'Magazynier'
DROP ROLE MagazynierRole
DROP User Magazynier
DROP LOGIN Magazynier
GO
SP_DROPROLEMEMBER 'PracownikRole', 'Pracownik'
DROP ROLE PracownikRole
DROP User Pracownik
DROP LOGIN Pracownik
GO
